#include "TangentUtils.h"

template <typename Point, typename Tangent, typename Vector>
void Pencil<Point, Tangent, Vector>::compute_tangent(std::vector<Tangent> tangents) {
	Vector v;
	double weighted_eccentricity = 0.;
		
	for (auto it = tangents.begin(), itE = tangents.end(); it != itE; ++it) {
		float weight = TangentUtils::triangle(it->eccentricity);
		Vector direction = (Vector) it->v / (float) it->v.norm();
		direction *= weight; 
		v += direction;	
		weighted_eccentricity += weight;
	}
	
	if (weighted_eccentricity != 0.)
		tangent = v / weighted_eccentricity;
	else if (v == v) { // checking if nan
		tangent = v;
	}
	if (tangent == Vector()) 
		undefined = true;
		
}
